{
  "_args": [
    [
      {
        "raw": "worker-loader@^0.8.0",
        "scope": null,
        "escapedName": "worker-loader",
        "name": "worker-loader",
        "rawSpec": "^0.8.0",
        "spec": ">=0.8.0 <0.9.0",
        "type": "range"
      },
      "/Users/Jeff_Deng/work/ysg-project/node_modules/pdfjs-dist"
    ]
  ],
  "_cnpm_publish_time": 1499236962072,
  "_from": "worker-loader@^0.8.0",
  "_hasShrinkwrap": false,
  "_id": "worker-loader@0.8.1",
  "_location": "/worker-loader",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/worker-loader-0.8.1.tgz_1499236960889_0.7151360556017607"
  },
  "_npmUser": {
    "name": "trysound",
    "email": "trysound@yandex.ru"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "worker-loader@^0.8.0",
    "scope": null,
    "escapedName": "worker-loader",
    "name": "worker-loader",
    "rawSpec": "^0.8.0",
    "spec": ">=0.8.0 <0.9.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pdfjs-dist"
  ],
  "_resolved": "http://registry.npm.taobao.org/worker-loader/download/worker-loader-0.8.1.tgz",
  "_shasum": "e8e995331ea34df5bf68296824bfb7f0ad578d43",
  "_shrinkwrap": null,
  "_spec": "worker-loader@^0.8.0",
  "_where": "/Users/Jeff_Deng/work/ysg-project/node_modules/pdfjs-dist",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/worker-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^1.0.2",
    "schema-utils": "^0.3.0"
  },
  "description": "worker loader module for webpack",
  "devDependencies": {
    "del": "^2.2.2",
    "eslint": "^3.16.0",
    "eslint-config-webpack": "^1.0.0",
    "eslint-plugin-import": "^2.2.0",
    "mocha": "^3.2.0",
    "webpack": "^2.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "e8e995331ea34df5bf68296824bfb7f0ad578d43",
    "size": 31346,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/worker-loader/download/worker-loader-0.8.1.tgz"
  },
  "eslintConfig": {
    "extends": "webpack",
    "rules": {
      "linebreak-style": 0,
      "comma-dangle": [
        "error",
        {
          "arrays": "always-multiline",
          "objects": "always-multiline",
          "imports": "always-multiline",
          "exports": "always-multiline",
          "functions": "never"
        }
      ],
      "no-underscore-dangle": 0,
      "no-param-reassign": 0,
      "prefer-destructuring": 0,
      "strict": 0
    }
  },
  "gitHead": "02d7e1a098b4fb961f9d95d371eb97251c4886b5",
  "homepage": "https://github.com/webpack-contrib/worker-loader#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "ericclemmons",
      "email": "eric@smarterspam.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    },
    {
      "name": "trysound",
      "email": "trysound@yandex.ru"
    }
  ],
  "name": "worker-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": ">=0.9 <2 || ^2.1.0-beta || ^2.2.0"
  },
  "publish_time": 1499236962072,
  "readme": "[![npm][npm]][npm-url]\r\n[![deps][deps]][deps-url]\r\n[![test][test]][test-url]\r\n[![chat][chat]][chat-url]\r\n\r\n<div align=\"center\">\r\n  <a href=\"https://github.com/webpack/webpack\">\r\n    <img width=\"200\" height=\"200\" hspace=\"25\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\r\n  </a>\r\n  <h1>Worker Loader</h1>\r\n  <p>This loader registers the script as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\">Web Worker</a>.<p>\r\n</div>\r\n\r\n<h2 align=\"center\">Install</h2>\r\n\r\n```bash\r\nnpm i -D worker-loader\r\n```\r\n\r\nor\r\n\r\n```bash\r\nyarn add worker-loader --dev\r\n```\r\n\r\n<h2 align=\"center\"><a href=\"https://webpack.js.org/concepts/loaders\">Usage</a></h2>\r\n\r\nImport the worker file:\r\n\r\n``` javascript\r\n// main.js\r\nvar MyWorker = require(\"worker-loader!./file.js\");\r\n\r\nvar worker = new MyWorker();\r\nworker.postMessage({a: 1});\r\nworker.onmessage = function(event) {...};\r\nworker.addEventListener(\"message\", function(event) {...});\r\n```\r\n\r\nYou can also inline the worker as a blob with the `inline` parameter:\r\n``` javascript\r\nvar MyWorker = require(\"worker-loader?inline!./myWorker.js\");\r\n```\r\n\r\nInline mode will also create chunks for browsers without supporting of inline workers,\r\nto disable this behavior just set `fallback` parameter as `false`:\r\n\r\n``` javascript\r\nvar MyWorker = require(\"worker-loader?inline&fallback=false!./myWorker.js\");\r\n```\r\n\r\nTo set a custom name for the output script, use the `name` parameter. The name may contain the string `[hash]`,\r\nwhich will be replaced with a content-dependent hash for caching purposes. For example:\r\n\r\n``` javascript\r\nvar MyWorker = require(\"worker-loader?name=outputWorkerName.[hash].js!./myWorker.js\");\r\n```\r\n\r\n\r\nThe worker file can import dependencies just like any other file:\r\n\r\n``` javascript\r\n// file.js\r\nvar _ = require('lodash')\r\n\r\nvar o = {foo: 'foo'}\r\n\r\n_.has(o, 'foo') // true\r\n\r\n// Post data to parent thread\r\nself.postMessage({foo: 'foo'}) \r\n\r\n// Respond to message from parent thread\r\nself.addEventListener('message', function(event){ console.log(event); });  \r\n```\r\n\r\nYou can even use ES6 modules if you have the babel-loader configured:\r\n\r\n``` javascript\r\n// file.js\r\nimport _ from 'lodash'\r\n\r\nlet o = {foo: 'foo'}\r\n\r\n_.has(o, 'foo') // true\r\n\r\n// Post data to parent thread\r\nself.postMessage({foo: 'foo'}) \r\n\r\n// Respond to message from parent thread\r\nself.addEventListener('message', (event) => { console.log(event); });\r\n```\r\n\r\n### Integrating with TypeScript\r\n\r\nTo integrate with TypeScript, you will need to define a custom module for the exports of your worker. You will also need to cast the new worker as the `Worker` type:\r\n\r\n**typings/custom.d.ts**\r\n```\r\ndeclare module \"worker-loader!*\" {\r\n  const content: any;\r\n  export = content;\r\n}\r\n```\r\n\r\n**App.ts**\r\n```\r\nimport * as MyWorker from \"worker-loader!../../worker\";\r\nconst worker: Worker = new MyWorker();\r\n```\r\n\r\n<h2 align=\"center\">Maintainers</h2>\r\n\r\n<table>\r\n  <tbody>\r\n    <tr>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/sokra\">\r\n          <img width=\"150\" height=\"150\" src=\"https://github.com/sokra.png?s=150\">\r\n        </a>\r\n        <br />\r\n        <a href=\"https://github.com/sokra\">Tobias Koppers</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/d3viant0ne\">\r\n          <img width=\"150\" height=\"150\" src=\"https://avatars2.githubusercontent.com/u/8420490?v=3&s=150\">\r\n        </a>\r\n        <br />\r\n        <a href=\"https://github.com/d3viant0ne\">Joshua Wiens</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/TrySound\">\r\n          <img width=\"150\" height=\"150\" src=\"https://avatars3.githubusercontent.com/u/5635476?v=3&s=150\">\r\n        </a>\r\n        <br />\r\n        <a href=\"https://github.com/TrySound\">Bogdan Chadkin</a>\r\n      </td>\r\n    </tr>\r\n  <tbody>\r\n</table>\r\n\r\n\r\n[npm]: https://img.shields.io/npm/v/worker-loader.svg\r\n[npm-url]: https://npmjs.com/package/worker-loader\r\n\r\n[deps]: https://david-dm.org/webpack-contrib/worker-loader.svg\r\n[deps-url]: https://david-dm.org/webpack-contrib/worker-loader\r\n\r\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\r\n[chat-url]: https://gitter.im/webpack/webpack\r\n\r\n[test]: http://img.shields.io/travis/webpack-contrib/worker-loader.svg\r\n[test-url]: https://travis-ci.org/webpack-contrib/worker-loader\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/worker-loader.git"
  },
  "scripts": {
    "posttest": "eslint .",
    "test": "mocha"
  },
  "version": "0.8.1"
}
