{
  "_args": [
    [
      {
        "raw": "countup.js@^1.8.1",
        "scope": null,
        "escapedName": "countup.js",
        "name": "countup.js",
        "rawSpec": "^1.8.1",
        "spec": ">=1.8.1 <2.0.0",
        "type": "range"
      },
      "/Users/Jeff_Deng/work/ysg-project/node_modules/vux"
    ]
  ],
  "_cnpm_publish_time": 1503599857628,
  "_from": "countup.js@^1.8.1",
  "_hasShrinkwrap": false,
  "_id": "countup.js@1.9.1",
  "_location": "/countup.js",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/countup.js-1.9.1.tgz_1503599856615_0.7720447543542832"
  },
  "_npmUser": {
    "name": "inorganik",
    "email": "jamie.perkins@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "countup.js@^1.8.1",
    "scope": null,
    "escapedName": "countup.js",
    "name": "countup.js",
    "rawSpec": "^1.8.1",
    "spec": ">=1.8.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vux"
  ],
  "_resolved": "http://registry.npm.taobao.org/countup.js/download/countup.js-1.9.1.tgz",
  "_shasum": "0ab10eed91fd06eb751443afc1403982452c26f0",
  "_shrinkwrap": null,
  "_spec": "countup.js@^1.8.1",
  "_where": "/Users/Jeff_Deng/work/ysg-project/node_modules/vux",
  "bugs": {
    "url": "https://github.com/inorganik/countUp.js/issues"
  },
  "dependencies": {},
  "description": "Animates a numerical value by counting to it",
  "devDependencies": {
    "del": "~0.1.3",
    "gulp": "~3.8.10",
    "gulp-rename": "~1.2.0",
    "gulp-uglify": "^1.4.2",
    "gulp-wrap-umd": "~0.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0ab10eed91fd06eb751443afc1403982452c26f0",
    "size": 11167,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/countup.js/download/countup.js-1.9.1.tgz"
  },
  "gitHead": "6fd5d4ecb99944364ccf663124ebf77c9cfe6fa8",
  "homepage": "https://github.com/inorganik/countUp.js#readme",
  "license": "MIT",
  "main": "./dist/countUp.min.js",
  "maintainers": [
    {
      "name": "inorganik",
      "email": "jamie.perkins@gmail.com"
    }
  ],
  "name": "countup.js",
  "optionalDependencies": {},
  "publish_time": 1503599857628,
  "readme": "# CountUp.js\nCountUp.js is a dependency-free, lightweight JavaScript \"class\" that can be used to quickly create animations that display numerical data in a more interesting way.\n\nDespite its name, CountUp can count in either direction, depending on the `startVal` and `endVal` params that you pass.\n\nCountUp.js supports all browsers.\n\n## [Try the demo](http://inorganik.github.io/countUp.js)\n\n## Please note\n\n_Angular 1 and 2 modules used to be part of this repo_. **As of v1.9.0, they have moved.** See links below. \n\n## See Also\n\n- **[CountUp.js Angular 1.x Module](https://github.com/inorganik/countUp.js-angular1)**\n- **[CountUp.js Angular ^2 Module](https://github.com/inorganik/countUp.js-angular2)**\n- **[CountUp.js React](https://github.com/glennreyes/react-countup)**\n- **[CountUp.js WordPress Plugin](https://wordpress.org/plugins/countup-js/)**\n\n## Installation\n\nSimply include the countUp.js file in your project or install via npm or bower using the package name `countup.js` or `countUp.js` respectively.\n\nBefore making a pull request, please [read this](#contributing). MIT License.\n\nA jQuery version is also included in case you like dollar signs.\n\n## Usage:\nParams:\n- `target` = id of html element, input, svg text element, or var of previously selected element/input where counting occurs\n- `startVal` = the value you want to begin at\n- `endVal` = the value you want to arrive at\n- `decimals` = (optional) number of decimal places in number, default 0\n- `duration` = (optional) duration in seconds, default 2\n- `options` = (optional, see demo) formatting/easing options object\n\nDecimals, duration, and options can be left out to use the default values.\n\n```js\nvar numAnim = new CountUp(\"SomeElementYouWantToAnimate\", 24.02, 99.99);\nif (!numAnim.error) {\n    numAnim.start();\n} else {\n    console.error(numAnim.error);\n}\n```\n\nwith optional callback:\n\n```js\nnumAnim.start(someMethodToCallOnComplete);\n\n// or an anonymous function\nnumAnim.start(function() {\n    // do something\n})\n```\n\n#### Other methods:\nToggle pause/resume:\n\n```js\nnumAnim.pauseResume();\n```\n\nReset an animation:\n\n```js\nnumAnim.reset();\n```\n\nUpdate the end value and animate:\n\n```js\nvar someValue = 1337;\nnumAnim.update(someValue);\n```\n\n#### Animating to large numbers\nFor large numbers, since CountUp has a long way to go in just a few seconds, the animation seems to abruptly stop. The solution is to subtract 100 from your `endVal`, then use the callback to invoke the `update` method which completes the animation with the same duration with a difference of only 100 to animate:\n```js\nvar endVal = 9645.72;\nvar numAnim = new CountUp(\"targetElem\", 0, endVal - 100, 2, duration/2);\nnumAnim.start(function() {\n\tnumAnim.update(endVal);\n});\n```\n\n## Contributing <a name=\"contributing\"></a>\n\nBefore you make a pull request, please be sure to follow these super simple instructions:\n\n1. Do your work on `countUp.js` and/or other files in the root directory.\n2. In Terminal, `cd` to the `countUp.js` directory.\n3. Run `npm install`, which installs gulp and its dependencies.\n4. Run `gulp`, which copies and minifies the .js files to the `dist` folder.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/inorganik/countUp.js.git"
  },
  "scripts": {
    "build": "gulp",
    "clean": "gulp clean"
  },
  "version": "1.9.1"
}
